{% extends "maria_templates/base.html.twig" %}

{% block title %}Shop Owner with admin Chat
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<style>
		/* Chat Container Styles */
		.big-container {
			padding: 25px;
			max-width: 1400px;
			margin: 0 auto;
		}

		.chat-card {
			height: 600px;
			padding: 0;
		}

		.chat-container {
			display: flex;
			flex-direction: column;
			height: 100%;
			border-radius: 0.25rem;
			overflow: hidden;
			box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
		}

		/* Chat Messages Area */
		.chat-messages {
			flex: 1;
			padding: 20px;
			overflow-y: auto;
			background-color: #f5f7f9;
			display: flex;
			flex-direction: column;
		}

		/* Message Styles */
		.message {
			display: flex;
			margin-bottom: 15px;
			max-width: 80%;
		}

		.admin-message {
			margin-left: auto;
			flex-direction: row-reverse;
		}

		.shop-message {
			margin-right: auto;
		}

		.message-content {
			background-color: #fff;
			border-radius: 1rem;
			padding: 10px 15px;
			box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
			margin: 0 10px;
		}

		.admin-message .message-content {
			background-color: #007bff;
			color: white;
		}

		.time {
			font-size: 0.7rem;
			color: #6c757d;
			text-align: right;
			display: block;
			margin-top: 5px;
		}

		.admin-message .time {
			color: rgba(255, 255, 255, 0.8);
		}

		/* Input Area */
		.chat-input {
			padding: 15px;
			background-color: #fff;
			border-top: 1px solid #e9ecef;
		}

		/* Responsive Adjustments */
		@media(max-width: 768px) {
			.message {
				max-width: 90%;
			}
			.chat-card {
				height: calc(100vh - 150px);
			}
		}
	</style>
{% endblock %}

{% block body %}
	<div class="big-container">
		<div class="row">
			<div class="col-12">
				<div class="card">
					<div class="card-header bg-primary">
						<h4 class="card-title text-white mb-0">Chat with Admin Team</h4>
					</div>
					<div class="card-body chat-card">
						<div class="chat-container">
							<div class="chat-header">
								<div class="user-info">
									<div class="user-details">
										<h5>{{ shopOwner.nom }}</h5>
										<span class="status online">Online</span>
									</div>
								</div>
							</div>

							<div class="chat-messages" id="chatMessages">
								{% for message in messages|reverse %}
									<div class="message {% if message.sender.id == shopOwner.id %}shop-message{% else %}admin-message{% endif %}">
										<div class="message-content">
											<p>{{ message.content }}</p>
											<span class="time">{{ message.createdAt|date('h:i A') }}</span>
										</div>
									</div>
								{% endfor %}
							</div>

							<div class="chat-input">
								{{ form_start(form, {
        'attr': {
            'class': 'message-form',
            'id': 'chatForm',
            'action': path('admin_contact_shop_owner', {'id': shopOwner.id})
        }
    }) }}
								<div class="input-group">
									{{ form_widget(form.content, {
            'attr': {
                'class': 'form-control',
                'placeholder': 'Type your message here...',
                'id': 'messageInput'
            }
        }) }}
									<button type="submit" class="btn btn-primary send-btn" id="sendButton">
										<i class="fas fa-paper-plane"></i>
									</button>
								</div>
								{{ form_end(form) }}
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}

	{{ parent() }}
	<script>
		document.addEventListener('DOMContentLoaded', function() {
    const chatMessages = document.getElementById('chatMessages');
    const chatForm = document.getElementById('chatForm');
    const messageInput = document.getElementById('messageInput');
    const sendButton = document.getElementById('sendButton');
    
    // Scroll to bottom initially
    chatMessages.scrollTop = chatMessages.scrollHeight;
    
    // Handle form submission
    chatForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Disable button during submission
        sendButton.disabled = true;
        
        try {
            const formData = new FormData(chatForm);
            
            const response = await fetch(chatForm.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest' // Identify as AJAX request
                }
            });
            
            if (response.ok) {
                // Reload the page to show new message
                window.location.reload();
            } else {
                console.error('Error:', response.statusText);
            }
        } catch (error) {
            console.error('Error:', error);
        } finally {
            sendButton.disabled = false;
        }
    });
    
    // Handle Enter key press
    messageInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            chatForm.dispatchEvent(new Event('submit'));
        }
    });
});
	</script>
{% endblock %}
