{% extends 'backend/base.html.twig' %}

{% block stylesheets %}
	<link rel="stylesheet" href="{{ asset('assets/css2/css/styles.min.css') }}">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
	<style>
		/* Base reset */
		* {
			margin: 0;
			padding: 0;
			box-sizing: border-box;
		}

		body {
			background-color: #f5f9ff;
			font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
			line-height: 1.6;
			color: rgb(44, 62, 80);
		}

		/* Main container */
		.container-fluid {
			padding: 30px;
			max-width: 1400px;
			margin: 0 auto;
		}

		/* Page title */
		.page-title {
			margin-bottom: 20px;
			color: rgb(87, 85, 225);
			font-weight: 600;
			font-size: 1.8rem;
		}

		/* Card styling */
		.card {
			border: none;
			border-radius: 12px;
			box-shadow: 0 5px 15px rgba(93, 135, 255, 0.1);
			margin-bottom: 30px;
			overflow: hidden;
			background-color: #f5f9ff;
		}

		.card-header {
			background-color: rgb(255, 255, 255);
			color: white;
			border-radius: 12px;
			padding: 18px 24px;
			display: flex;
			justify-content: space-between;
			align-items: center;
			box-shadow: 0 5px 15px rgba(93, 135, 255, 0.1);
			border-color: black;
		}

		.card-header h4 {
			margin: 0;
			font-weight: 600;
			font-size: 1.25rem;
			color: white;
		}

		.card-body {
			padding: 0;
		}

		/* Table styling */
		.table-responsive {
			width: 100%;
			overflow-x: auto;
			-webkit-overflow-scrolling: touch;
			scrollbar-width: thin;
			scrollbar-color: #c9d6ff #f1f5f9;
		}

		.table-responsive::-webkit-scrollbar {
			height: 8px;
		}

		.table-responsive::-webkit-scrollbar-track {
			background: #f1f5f9;
		}

		.table-responsive::-webkit-scrollbar-thumb {
			background-color: #c9d6ff;
			border-radius: 20px;
		}

		.table {
			width: 100%;
			min-width: 1200px;
			border-collapse: separate;
			border-spacing: 0;
			margin: 0;
		}

		.table th,
		.table td {
			padding: 14px 18px;
			vertical-align: middle;
		}

		.table th {
			background-color: rgb(113, 111, 255);
			color: white;
			font-weight: 600;
			text-align: left;
			position: sticky;
			top: 0;
			z-index: 10;
			white-space: nowrap;
		}

		.table tbody tr {
			border-bottom: 1px solid #e2e8f0;
			transition: background-color 0.2s ease;
		}

		.table-striped tbody tr:nth-of-type(odd) {
			background-color: #f9fbff;
		}

		.table-striped tbody tr:nth-of-type(even) {
			background-color: #fff;
		}

		.table tbody tr:hover {
			background-color: #f0f4ff;
		}

		.table td {
			border-bottom: 1px solid #e2e8f0;
		}

		/* Badges styling */
		.badge {
			padding: 6px 10px;
			border-radius: 6px;
			font-weight: 500;
			font-size: 0.8rem;
			display: inline-flex;
			align-items: center;
			gap: 5px;
		}

		.badge i {
			font-size: 0.9rem;
		}

		.badge-success {
			background-color: #13deb9;
			color: white;
		}

		.badge-danger {
			background-color: rgb(237, 127, 96);
			color: white;
		}

		.badge-warning {
			background-color: #49beff;
			color: white;
		}

		.badge-secondary {
			background-color: #e2e8f0;
			color: #64748b;
		}

		/* Truncated text with tooltip */
		.truncated {
			max-width: 200px;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
			position: relative;
			cursor: pointer;
		}

		/* Action buttons */
		.btn {
			padding: 8px 16px;
			border-radius: 6px;
			font-weight: 500;
			cursor: pointer;
			transition: all 0.3s;
			border: none;
			display: inline-flex;
			align-items: center;
			gap: 6px;
		}

		.btn-pay {
			background: linear-gradient(135deg, #13deb9 0%, #11c3a2 100%);
			color: white;
			padding: 8px 16px;
			border-radius: 6px;
			font-weight: 500;
			cursor: pointer;
			transition: all 0.3s;
			border: none;
			display: inline-flex;
			align-items: center;
			gap: 6px;
			box-shadow: 0 4px 10px rgba(19, 222, 185, 0.2);
		}

		.btn-pay:hover {
			background: linear-gradient(135deg, #11c3a2 0%, #13deb9 100%);
			transform: translateY(-2px);
			box-shadow: 0 6px 15px rgba(19, 222, 185, 0.3);
		}

		.btn-pay:active {
			transform: translateY(0);
			box-shadow: 0 2px 5px rgba(19, 222, 185, 0.2);
		}

		.btn-pay:disabled,
		.btn-secondary:disabled {
			background: #cbd5e1;
			cursor: not-allowed;
			transform: none;
			box-shadow: none;
		}

		.btn-secondary {
			background: linear-gradient(135deg, #49beff 0%, #378dff 100%);
			color: white;
			padding: 8px 16px;
			border-radius: 6px;
			font-weight: 500;
			cursor: pointer;
			transition: all 0.3s;
			border: none;
			display: inline-flex;
			align-items: center;
			gap: 6px;
			box-shadow: 0 4px 10px rgba(73, 190, 255, 0.2);
		}

		.btn-secondary:hover {
			background: linear-gradient(135deg, #378dff 0%, #49beff 100%);
			transform: translateY(-2px);
			box-shadow: 0 6px 15px rgba(73, 190, 255, 0.3);
		}

		.btn-secondary:active {
			transform: translateY(0);
			box-shadow: 0 2px 5px rgba(73, 190, 255, 0.2);
		}
		.btn-chat {
			background: linear-gradient(135deg, #49beff 0%, #49beff 100%);
			color: white;
			padding: 8px 16px;
			border-radius: 6px;
			font-weight: 500;
			cursor: pointer;
			transition: all 0.3s;
			border: none;
			display: inline-flex;
			align-items: center;
			gap: 6px;
			text-decoration: none;
			box-shadow: 0 4px 10px rgba(155, 89, 182, 0.2);
		}

		.btn-chat:hover {
			background: linear-gradient(135deg, #3d3b8e 0%, #3d3b8e 100%);
			transform: translateY(-2px);
			box-shadow: 0 6px 15px rgba(155, 89, 182, 0.3);
			color: white;
		}

		.btn-chat:active {
			transform: translateY(0);
			box-shadow: 0 2px 5px rgba(155, 89, 182, 0.2);
		}
		/* Toast notifications */
		.toast {
			position: fixed;
			bottom: 30px;
			right: 30px;
			padding: 14px 20px;
			border-radius: 8px;
			color: white;
			opacity: 0;
			transform: translateY(20px);
			transition: all 0.3s ease;
			z-index: 1000;
			font-weight: 500;
			box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
			display: flex;
			align-items: center;
			gap: 10px;
		}

		.toast i {
			font-size: 1.2rem;
		}

		.toast.show {
			opacity: 1;
			transform: translateY(0);
		}

		.toast-success {
			background: linear-gradient(135deg, #13deb9 0%, #11c3a2 100%);
		}

		.toast-error {
			background: linear-gradient(135deg, #fa896b 0%, #f7775c 100%);
		}

		/* Status indicators */
		#last-payment-container {
			display: inline-flex;
			align-items: center;
			gap: 8px;
		}

		.payment-pill {
			display: inline-flex;
			align-items: center;
			gap: 6px;
			padding: 5px 10px;
			border-radius: 20px;
			font-size: 0.85rem;
			font-weight: 500;
		}

		.payment-pill-recent {
			background-color: #ebfaf7;
			color: #13deb9;
			border: 1px solid #c7f5ee;
		}

		.payment-pill-never {
			background-color: #feede9;
			color: #fa896b;
			border: 1px solid #fcdcd3;
		}

		/* Additional subtle colors for UI elements */
		.text-success {
			color: #13deb9;
		}

		.text-danger {
			color: #fa896b;
		}

		.text-warning {
			color: #49beff;
		}

		.text-muted {
			color: #94a3b8;
		}

		.fw-bold {
			font-weight: 600;
		}

		.bg-light {
			background-color: #f0f4fd;
		}

		.text-dark {
			color: #2c3e50;
		}

		/* Responsive adjustments */
		@media(max-width: 1400px) {
			.container-fluid {
				padding: 20px;
			}
		}

		@media(max-width: 992px) {
			.container-fluid {
				padding: 15px;
			}

			.card-header {
				padding: 15px 20px;
			}

			.page-title {
				font-size: 1.5rem;
			}
		}

		@media(max-width: 768px) {
			.container-fluid {
				padding: 10px;
			}

			.page-title {
				font-size: 1.3rem;
				margin-bottom: 15px;
			}
		}
	</style>
{% endblock %}

{% block content %}
	<main class="container-fluid pt-5">

		<div class="mt-2 card">
			<div class="card-header">
				<h4 style="color:#3d3b8e">
					<i class="fas fa-list me-2" style="color:rgb(237, 127, 96)"></i>Liste des Commerçants
				</h4>
				<div class="header-actions">
					<span style="color:#3d3b8e">
						<i class="fas fa-info-circle me-1" style="color:#13deb9"></i>
						{{ shops|length }}
						shops total</span>
				</div>
			</div>
			<div class="mt-3 card-body">
				<div class="table-responsive">
					<table class="table table-striped mb-0">
						<thead>
							<tr>
								<th>
									<i class="fas fa-hashtag me-1"></i>ID</th>
								<th>
									<i class="fas fa-store me-1"></i>Nom du Shop</th>
								<th>
									<i class="fas fa-align-left me-1"></i>Description</th>
								<th>
									<i class="fas fa-tags me-1"></i>Catégorie</th>
								<th>
									<i class="fas fa-calendar-alt me-1"></i>Last Payment</th>
								<th>
									<i class="fas fa-money-check-alt me-1"></i>Payment Status</th>
								<th>
									<i class="fas fa-euro-sign me-1"></i>Prix du Loyer</th>
								<th>
									<i class="fas fa-boxes me-1"></i>Produits</th>
								<th>
									<i class="fas fa-calendar-day me-1"></i>Event</th>
								<th>
									<i class="fas fa-percent me-1"></i>Discount</th>
								<th>
									<i class="fas fa-door-open me-1"></i>Status</th>
								<th>
									<i class="fas fa-cogs me-1"></i>Action</th>
								<th>
									<i class="fas fa-comments me-1"></i>Chat</th>
							</tr>
						</thead>
						<tbody>
							{% for shop in shops %}
								<tr id="shop-row-{{ shop.id }}">
									<td>{{ shop.id }}</td>
									<td>
										<div class="fw-bold">{{ shop.nom }}</div>
									</td>
									<td>
										<div class="truncated" title="{{ shop.description|default('No description available') }}">
											{{ shop.description|default('N/A')|u.truncate(30, '...') }}
										</div>
									</td>
									<td>{{ shopcategories[shop.id] }}</td>
									<td id="last-payment-{{ shop.id }}">
										{% if shop.lastPaymentDate %}
											<span title="Last payment date">
												<i class="far fa-calendar-check me-1 text-success"></i>
												{{ shop.lastPaymentDate|date('Y-m-d') }}
											</span>
										{% else %}
											<span class="text-danger">
												<i class="far fa-calendar-times me-1"></i>
												Never
											</span>
										{% endif %}
									</td>
									<td id="payment-status-{{ shop.id }}">
										{% if shop.isPaymentOverdue() %}
											<span class="badge badge-danger">
												<i class="fas fa-exclamation-circle"></i>
												Overdue ({{ date().diff(shop.lastPaymentDate ?: date()).days }}
												days)
											</span>
										{% else %}
											<span class="badge badge-success">
												<i class="fas fa-check-circle"></i>
												Paid
											</span>
										{% endif %}
									</td>
									<td>
										{% if shop.rentingPrice %}
											<span class="fw-bold">{{ shop.rentingPrice }}
												DT</span>
										{% else %}
											<span class="text-muted">N/A</span>
										{% endif %}
									</td>
									<td>
										<span class="badge bg-light text-dark">
											<i class="fas fa-box me-1"></i>
											{{ shop_product_counts[shop.id] ?? 0 }}
										</span>
									</td>
									<td>
										{% if has_current_event[shop.id] %}
											<span class="badge badge-success">
												<i class="fas fa-calendar-check"></i>
												Active
											</span>
										{% else %}
											<span class="badge badge-secondary">
												<i class="fas fa-calendar-times"></i>
												None
											</span>
										{% endif %}
									</td>
									<td>
										{% if has_current_discount[shop.id] %}
											<span class="badge badge-warning">
												<i class="fas fa-tag"></i>
												{{ current_discount_percentages[shop.id] }}% OFF
											</span>
										{% else %}
											<span class="badge badge-secondary">
												<i class="fas fa-tag"></i>
												None
											</span>
										{% endif %}
									</td>
									<td>
										{% if shop_open_status[shop.id] %}
											<span class="badge badge-success">
												<i class="fas fa-door-open"></i>
												Open
											</span>
										{% else %}
											<span class="badge badge-danger">
												<i class="fas fa-door-closed"></i>
												Closed
											</span>
										{% endif %}
									</td>
									<td>
										{% if shop.isPaymentOverdue() %}
											<button class="btn-pay" data-shop-id="{{ shop.id }}">
												<i class="fas fa-money-bill-wave"></i>
												Pay
											</button>
										{% else %}
											<button class="btn-secondary" disabled>
												<i class="fas fa-check"></i>
												Paid
											</button>
										{% endif %}
									</td>
									<td></td>
									<td>
										<a href="{{ path('admin_contact_shop_owner', {'id': shop.id}) }}" class="btn-chat">
											<i class="fas fa-comment-dots"></i>
											Chat
										</a>
									</td>
								</tr>
							</td>
						</tbody>
					</tr>
				{% endfor %}
			</tbody>
		</table>
	</div>
</div></div></main>{% endblock %}{% block js %}{{ parent() }}<script>document.addEventListener('DOMContentLoaded', function () {
const csrfToken = document.querySelector('meta[name="csrf-token"]') ?. content;
console.log("CSRF Token:", csrfToken);

// Tooltip functionality (unchanged)
document.querySelectorAll('.truncated').forEach(el => {
el.addEventListener('mouseenter', function () { // Your existing tooltip code
});
});

// Payment button handler - improved version
document.addEventListener('click', async function (e) {
const payBtn = e.target.closest('.btn-pay');
if (! payBtn) 
return;



console.log("Pay button clicked for shop:", payBtn.dataset.shopId);

if (payBtn.disabled) {
console.log("Button is disabled, ignoring click");
return;
}

const shopId = payBtn.dataset.shopId;
if (! shopId) {
console.error("No shop ID found on button");
return;
}

if (!confirm (`Confirm payment for shop #${shopId}?`)) {
console.log("Payment cancelled by user");
return;
}

const originalHtml = payBtn.innerHTML;
payBtn.disabled = true;
payBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';

try {
const response = await fetch (`/admin/shopsadmin/${shopId}/pay`, {
method: 'POST',
headers: {
'Content-Type': 'application/json',
'X-CSRF-Token': csrfToken
}
});

const data = await response.json();
console.log("Payment response:", data);

if (! response.ok) {
throw new Error(data.message || 'Payment failed');
}

showToast('Payment successful! Page will refresh...', 'success');
setTimeout(() => window.location.reload(), 1500);
} catch (error) {
console.error("Payment error:", error);
showToast(error.message, 'error');
payBtn.disabled = false;
payBtn.innerHTML = originalHtml;
}
});

function showToast(message, type = 'success') {
const toast = document.createElement('div');
toast.className = `toast toast-${type}`;
const icon = type === 'success' ? '<i class="fas fa-check-circle"></i>' : '<i class="fas fa-exclamation-circle"></i>';
toast.innerHTML = `${icon} ${message}`;
document.body.appendChild(toast);

setTimeout(() => {
toast.classList.add('show');
setTimeout(() => {
toast.classList.remove('show');
setTimeout(() => toast.remove(), 300);
}, 3000);
}, 100);
}
});</script>{% endblock %}
