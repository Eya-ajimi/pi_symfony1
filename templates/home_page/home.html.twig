{% extends 'base.html.twig' %}

{% block title %}Home - InnoMall{% endblock %}

{# Include home.css & home.js only for this page #}
{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('css/home.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" referrerpolicy="no-referrer" />  
    <style>
       
        .no-options {
            color: #ccc;
            cursor: not-allowed;
        }


/*map*/
#map {
    position: relative;
    height: 400px;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    animation: fadeIn 1s ease-in-out;
}

#map::before {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(270deg, #00f, #0ff, #00f);
    background-size: 600% 600%;
    border-radius: 22px;
    z-index: -1;
    animation: gradientMove 6s ease infinite;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: scale(0.95);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes gradientMove {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

.open-shop i {
    animation: bounce 2s infinite;
}

@keyframes bounce {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-5px);
    }
}
.user-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    object-fit: cover;
    margin-right: 10px;
}


    </style>
{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Function to close all post menus
        const closeAllPostMenus = () => {
            document.querySelectorAll('.post-menu').forEach(menu => {
                menu.classList.remove('visible');
            });
        };

        // Function to close all comment menus
        const closeAllCommentMenus = () => {
            document.querySelectorAll('.comment-menu').forEach(menu => {
                menu.style.display = 'none';
            });
        };

        // Post options menu handling
        document.querySelectorAll('.post-options').forEach(optionBtn => {
            optionBtn.addEventListener('click', function(e) {
                e.stopPropagation();
                const menu = this.nextElementSibling;
                
                // Close all other menus before opening this one
                closeAllPostMenus();
                closeAllCommentMenus();
                menu.classList.toggle('visible');
            });
        });

        // Comment options menu handling
        document.querySelectorAll('.comment-options').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.stopPropagation();
                const menu = this.nextElementSibling;
                
                // Close all other menus before opening this one
                closeAllPostMenus();
                closeAllCommentMenus();
                menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
            });
        });

        // Reply options menu handling
        document.querySelectorAll('.scomment-options').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.stopPropagation();
                const menu = this.nextElementSibling;
                
                // Close all other menus before opening this one
                closeAllPostMenus();
                closeAllCommentMenus();
                menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
            });
        });

        // Toggle reply form visibility
        function toggleReplyForm(commentId) {
            const form = document.getElementById(`reply-form-${commentId}`);
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }

        // Close all menus when clicking elsewhere
        document.addEventListener('click', function() {
            closeAllPostMenus();
            closeAllCommentMenus();
        });

        // Prevent closing when clicking inside menus
        document.querySelectorAll('.post-menu, .comment-menu').forEach(menu => {
            menu.addEventListener('click', function(e) {
                e.stopPropagation();
            });
        });
    });
</script>
{% endblock %}

{% block content %}
<div class="container">
   <!-- Left Section: Chatbot -->

<!-- Bouton flottant pour ouvrir InnoChat -->

<aside class="left-section">
    <!-- Bulle flottante du chat -->
    <button id="chat-toggle" class="chat-bubble" onclick="toggleChat()">
        ðŸ’¬ InnoChat
        <span id="notification-badge" style="display: none;">ðŸ”´</span>
    </button>

    <!-- BoÃ®te de chat -->
    <div id="chat-box" class="chat-box" style="display: none;">
        <div id="chat-container" class="chat-container"></div>

        <div class="input-container">
            <input id="user-input" type="text" placeholder="Posez votre question..." />
            <button id="send-button">Envoyer</button>
        </div>
    </div>
</aside>


<!-- Link to CSS -->
<link rel="stylesheet" href="chatbot.css">
<script src="chatbot.js"></script>



    <!-- Middle Section: Posts -->
    <div class="container">
        <section class="middle-section">
            {# Post Creation Form #}
            <div class="create-post">
                {{ form_start(postForm, {
                    'action': path('app_home_page'),
                    'attr': {
                        'class': 'post-form',
                        'novalidate': 'novalidate',
                        'name': 'post_form'
                    }
                }) }}

                <div class="form-group input-wrapper">
                    {{ form_widget(postForm.contenu, {
                        'attr': {
                            'class': 'custom-textarea-rect',
                        }
                    }) }}

                    <button type="submit" class="post-btn">Post</button>

                    {# Display post form validation errors here #}
                    {% for error in postForm.contenu.vars.errors %}
                        <div class="tooltip-error">{{ error.message }}</div>
                    {% endfor %}
                </div>

                {{ form_end(postForm) }}
            </div>

            <br/>
            <br/>

            {% for post in posts %}
            <div class="post-card {% if post.utilisateur == app.user %}user-owned{% endif %}">
                <div class="post-header">
                    <div class="user-info">
                        {% if post.utilisateur.profilePicture %}
    <img src="{{ asset('uploads/profile_pictures/' ~ post.utilisateur.profilePicture) }}" alt="User Image" class="user-avatar">
{% else %}
    <span><i class="fas fa-user"></i></span>
{% endif %}

                        <div class="user-details">
                            <span class="user-name">{{ post.utilisateur.nom }}</span>
                            <span class="post-time">{{ post.dateCreation|date('H:i') }}</span>
                        </div>
                    </div>
                    
                    {% if post.utilisateur == app.user %}
                        <span class="post-options">â‹®</span>
                        <div class="post-menu">
                            <a href="{{ path('app_home_page', {'edit': post.id}) }}" class="edit-post">
                                <i class="fas fa-edit" style="color: grey;"></i> Edit
                            </a>
                            <a href="{{ path('post_delete', {id: post.id}) }}" 
                               onclick="return confirm('ÃŠtes-vous sÃ»r de vouloir supprimer ce post ?')">
                                <i class="fas fa-trash-alt" style="color: red;"></i> Delete
                            </a>
                        </div>
                    {% else %}
                        <span class="no-options" title="You can only edit your own posts">â‹®</span>
                    {% endif %}
                </div>

                <div class="post-content">
                    {% if edit_post_id == post.id %}
                        <form method="POST">
                            <input type="hidden" name="post_id" value="{{ post.id }}">
                            <textarea name="content" class="edit-textarea">{{ post.contenu }}</textarea>
                            <div class="edit-actions">
                                <button type="submit" class="save-btn">Save</button>
                                <a href="{{ path('app_home_page') }}" class="cancel-btn">Cancel</a>
                            </div>
                        </form>
                    {% else %}
                        {{ post.contenu }}
                    {% endif %}
                </div>

                <div class="post-actions">
                    <button class="like-btn">Like</button>
                    <button class="comment-btn">Comment</button>
                </div>

                <!-- Comment Section -->
                <div class="comment-section">
                    {% for comment in post.commentaires %}
                    <div class="comment {% if comment.utilisateur == app.user %}user-owned{% endif %}">
                        {% if comment.utilisateur.profilePicture %}
    <img src="{{ asset('uploads/profile_pictures/' ~ comment.utilisateur.profilePicture) }}" alt="User Image" class="user-avatar">
{% else %}
    <span><i class="fas fa-user"></i></span>
{% endif %}

                        <div class="comment-body">
                            <div class="comment-header">
                                <span class="comment-user">{{ comment.utilisateur.nom }}</span>
                                <span class="comment-time">{{ comment.dateCreation|date('H:i') }}</span>
                                
                                {% if comment.utilisateur == app.user %}
                                    <span class="comment-options">â‹®</span>
                                    <div class="comment-menu">
                                        <a href="{{ path('app_home_page', {'edit_comment': comment.id}) }}" class="edit-comment">
                                            <i class="fas fa-edit" style="color: grey;"></i> Edit
                                        </a>
                                        <a href="{{ path('comment_delete', {'id': comment.id}) }}" 
                                           onclick="return confirm('ÃŠtes-vous sÃ»r de vouloir supprimer ce commentaire ?')">
                                            <i class="fas fa-trash-alt" style="color: red;"></i> Delete
                                        </a>
                                    </div>
                                {% else %}
                                    <span class="no-options" title="You can only edit your own comments">â‹®</span>
                                {% endif %}
                            </div>
                            
                            {% if edit_comment_id == comment.id %}
                                <form method="POST" action="{{ path('app_home_page') }}" class="edit-comment-form">
                                    <input type="hidden" name="comment_id" value="{{ comment.id }}">
                                    <textarea name="comment_content" class="edit-comment-textarea">{{ comment.contenu }}</textarea>
                                    <div class="edit-comment-actions">
                                        <button type="submit" class="save-comment-btn">Save</button>
                                        <a href="{{ path('app_home_page') }}" class="cancel-comment-btn">Cancel</a>
                                    </div>
                                </form>
                            {% else %}
                                <div class="comment-text">{{ comment.contenu }}</div>
                            {% endif %}
                            
                            <div class="comment-actions">
                                <button class="like-btn">Like</button>
                                <button class="reply-btn" onclick="toggleReplyForm({{ comment.id }})">Reply</button>
                            </div>

                            <!-- Hidden reply form -->
                            <div class="add-reply">
                                {{ form_start(replyForms[comment.id], { 'attr': {'class': 'reply-form', 'novalidate': 'novalidate'} }) }}
                                <div class="input-wrapper" style="width:450px">
                                    {{ form_widget(replyForms[comment.id].contenu, {'attr': {
                                        'class': 'custom-textarea',
                                        'data-error-target': 'input'
                                    }}) }}
                                    <button type="submit" class="send-btn">âž¤</button>

                                    {% for error in replyForms[comment.id].contenu.vars.errors %}
                                        <div class="tooltip-error">{{ error.message }}</div>
                                    {% endfor %}
                                </div>

                                <input type="hidden" name="reply_comment_id" value="{{ comment.id }}">
                                {{ form_end(replyForms[comment.id]) }}
                            </div>
                            
                            <!-- Reply Section -->
                            {% for reply in comment.sousCommentaires %}
                            <div class="reply {% if reply.utilisateur == app.user %}user-owned{% endif %}">
                                {% if reply.utilisateur.profilePicture %}
    <img src="{{ asset('uploads/profile_pictures/' ~ reply.utilisateur.profilePicture) }}" alt="User Image" class="user-avatar">
{% else %}
    <span><i class="fas fa-user"></i></span>
{% endif %}

                                <div class="comment-body">
                                    <div class="comment-header">
                                        <span class="comment-user">{{ reply.utilisateur.nom }}</span>
                                        <span class="comment-time">{{ reply.dateCreation|date('H:i') }}</span>
                                        
                                        {% if reply.utilisateur == app.user %}
                                            <span class="scomment-options">â‹®</span>
                                            <div class="comment-menu">
                                                <a href="{{ path('app_home_page', {'edit_reply': reply.id}) }}" class="edit-comment">
                                                    <i class="fas fa-edit" style="color: grey;"></i> Edit
                                                </a>
                                                <a href="{{ path('delete_reply', {'id': reply.id}) }}" 
                                                   onclick="return confirm('ÃŠtes-vous sÃ»r de vouloir supprimer ce sous commentaire ?')">
                                                    <i class="fas fa-trash-alt" style="color: red;"></i> Delete
                                                </a>
                                            </div>
                                        {% else %}
                                            <span class="no-options" title="You can only edit your own replies">â‹®</span>
                                        {% endif %}
                                    </div>
                                    
                                    {% if edit_reply_id == reply.id %}
                                        <form method="POST" action="{{ path('app_home_page') }}" class="edit-comment-form">
                                            <input type="hidden" name="reply_id" value="{{ reply.id }}">
                                            <textarea name="reply_content" class="edit-comment-textarea">{{ reply.contenu }}</textarea>
                                            <div class="edit-comment-actions">
                                                <button type="submit" class="save-comment-btn">Save</button>
                                                <a href="{{ path('app_home_page') }}" class="cancel-comment-btn">Cancel</a>
                                            </div>
                                        </form>
                                    {% else %}
                                        <div class="comment-text">{{ reply.contenu }}</div>
                                    {% endif %}
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                    {% endfor %}
                </div>
                
                <!-- Add Comment Box -->
                <div class="add-comment">
                    {{ form_start(commentForms[post.id], { 'attr': {'class': 'comment-form', 'novalidate': 'novalidate'} }) }}

                    <div class="input-wrapper">
                        {{ form_widget(commentForms[post.id].contenu, {'attr': {
                            'class': 'custom-textarea',
                            'data-error-target': 'input' 
                        }}) }}
                        <button type="submit" class="send-btn">âž¤</button>

                        {% for error in commentForms[post.id].contenu.vars.errors %}
                            <div class="tooltip-error">{{ error.message }}</div>
                        {% endfor %}
                    </div>

                    <input type="hidden" name="comment_post_id" value="{{ post.id }}">

                    {{ form_end(commentForms[post.id]) }}
                </div>
            </div>
            {% endfor %}
        </section>
    </div>

    <!-- Right Section: Mall Map & ATMs -->
    <aside class="right-section">
        <div class="mall-map">
            

            <div id="map" style="height: 400px;"></div>


        </div>
             
        <div class="atm-section">
            <h3><i class="fas fa-money-check-alt me-2 text-primary"></i>ATM Status Dashboard</h3>

            {% if atms is not empty %}
                <table class="atm-table">
                    <thead>
                        <tr>
                            <th><i class="fas fa-building-columns me-1"></i>Bank Name</th>
                            <th><i class="fas fa-map-marker-alt me-1"></i>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for atm in atms %}
                            <tr>
                                <td>{{ atm.bankName|capitalize }}</td>
                                <td>
                                    <span class="status-badge {{ atm.status == 'active' ? 'status-active' : 'status-inactive' }}">
                                        <i class="fas {{ atm.status == 'active' ? 'fa-check-circle' : 'fa-times-circle' }} me-1"></i>
                                        {{ atm.status }}
                                    </span>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            {% else %}
                <p class="text-muted mt-3">No ATMs found.</p>
            {% endif %}
        </div>
    </aside>
</div>


<script>
    // Initialiser la carte (centrÃ©e sur le mall)
    var map = L.map('map').setView([36.8477990, 10.2790317], 17); 

    // Fond de carte OpenStreetMap
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: 'Â© OpenStreetMap contributors'
    }).addTo(map);

    // Liste des shops
    var shops = [
        {name: "Zara", lat: 36.8479, lng: 10.2792},
        {name: "Strass", lat: 36.8480, lng: 10.2789},
        {name: "KFC", lat: 36.8475, lng: 10.2795},
    ];



    // Heure actuelle
    var now = new Date();
    var currentHour = now.getHours();
    var currentDay = now.getDay(); // 0 = dimanche, 1 = lundi, ..., 6 = samedi

    shops.forEach(function(shop) {
        // DÃ©terminer si le shop est ouvert ou fermÃ©
        var isOpen;

        if (currentDay === 0) { 
            // Dimanche
            isOpen = (currentHour >= 9 && currentHour < 18);
        } else {
            // Autres jours
            isOpen = (currentHour >= 9 && currentHour < 22);
        }


        // Choisir une icÃ´ne diffÃ©rente
        var iconHtml = isOpen
            ? '<i class="fas fa-store" style="color:green; font-size:15px;"></i>'
            : '<i class="fas fa-store-slash" style="color:red; font-size:15px;"></i>';

        var marker = L.marker(
            [shop.lat, shop.lng],
            {
                icon: L.divIcon({
                    className: 'custom-icon',
                    html: iconHtml,
                    iconSize: [25, 40],
                    iconAnchor: [15, 42],
                    popupAnchor: [0, -45]
                })
            }
        ).addTo(map);

        marker.bindPopup("<b>" + shop.name + "</b><br>" + (isOpen ? "Open" : "Closed"));
    });

/* chatbot*/
const API_KEY = "AIzaSyARLm_6I1eK9vdzeg0cvlrQrZF5AF42tLY";

const chatContainer = document.getElementById("chat-container");
const userInput = document.getElementById("user-input");
const sendButton = document.getElementById("send-button");
const chatBox = document.getElementById("chat-box");
const notificationBadge = document.getElementById("notification-badge");

let chatOpen = false;
let autoCloseTimer;

sendButton.addEventListener("click", sendMessage);
userInput.addEventListener("keypress", function(e) {
    if (e.key === "Enter") sendMessage();
});

function toggleChat() {
    if (chatBox.style.display === "flex") {
        chatBox.style.display = "none";
        chatOpen = false;
        clearTimeout(autoCloseTimer);
    } else {
        chatBox.style.display = "flex";
        chatBox.style.animation = "pop 0.4s ease";
        chatOpen = true;
        notificationBadge.style.display = "none";
        resetAutoCloseTimer();
        sendWelcomeMessage();
    }
}

function resetAutoCloseTimer() {
    clearTimeout(autoCloseTimer);
    autoCloseTimer = setTimeout(() => {
        chatBox.style.display = "none";
        chatOpen = false;
    }, 50000); // 30 secondes
}

function sendWelcomeMessage() {
    chatContainer.innerHTML = ''; // vider le chat Ã  l'ouverture
    addMessage("bot", "ðŸ‘‹ Salut, je suis InnoChatâ€¯! Posez-moi vos questions !");
}

async function sendMessage() {
    const text = userInput.value.trim();
    if (!text) return;

    addMessage("user", text);
    userInput.value = "";

    resetAutoCloseTimer();

    const loader = addLoader();

    try {
       

       const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${API_KEY}`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
   body: JSON.stringify({
 contents: [
    { role: "user", parts: [{ 
        text: `Tu es InnoChat, un assistant virtuel pour InnoMall.
Voici ce que tu dois savoir :
- InnoMall est un centre commercial avec 100 magasins.
- Les magasins disponibles sont : Zara, Mango, KFC Stars, Fatales, Bershka, Musimo Duetti, Polo, Adidas, Florison, Cosmito, Papajones, et d'autres.
- InnoMall propose des cartes de fidÃ©litÃ©.
- Un client peut gagner un produit gratuit aprÃ¨s avoir accumulÃ© 3000 points.
- Si un client te demande s'il y a des promotions, rÃ©ponds poliment : "Oui, il est probable qu'il y ait des promotionsâ€¯! Je vous conseille de consulter directement l'application pour voir les offres spÃ©cifiques des magasins."
IMPORTANT :
- Tu dois rÃ©pondre uniquement aux questions concernant InnoMall et ses services.
- Si quelqu'un pose une question hors sujet, rÃ©ponds poliment : "Je suis dÃ©solÃ©, je suis uniquement programmÃ© pour rÃ©pondre aux questions concernant InnoMall."
- Reste toujours poli et professionnel dans toutes tes rÃ©ponses.` 
    }] },
    { role: "user", parts: [{ text: text }] }
]


})

});


        const data = await response.json();
        removeLoader(loader);

        if (data.candidates) {
            const botReply = data.candidates[0].content.parts[0].text;
            addMessage("bot", botReply);

            if (!chatOpen) {
                notificationBadge.style.display = "inline";
            }
        } else if (data.error) {
            addMessage("bot", "Erreur: " + data.error.message);
        } else {
            addMessage("bot", "RÃ©ponse non comprise !");
        }
    } catch (error) {
        console.error("Erreur rÃ©seau :", error);
        removeLoader(loader);
        addMessage("bot", "Erreur de connexion.");
    }
}

function addMessage(sender, text) {
    const message = document.createElement("div");
    message.classList.add("message");
    message.classList.add(sender === "user" ? "user-message" : "bot-message");
    message.textContent = text;
    chatContainer.appendChild(message);
    chatContainer.scrollTop = chatContainer.scrollHeight;
}

function addLoader() {
    const loader = document.createElement("div");
    loader.classList.add("message", "bot-message", "loader");
    loader.textContent = "Le bot rÃ©flÃ©chit...";
    chatContainer.appendChild(loader);
    chatContainer.scrollTop = chatContainer.scrollHeight;
    return loader;
}

function removeLoader(loader) {
    if (loader) {
        chatContainer.removeChild(loader);
    }
}







</script>




{% endblock %}