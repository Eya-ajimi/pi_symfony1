{% extends "maria_templates/base.html.twig" %}

{% block title %}Shop Products
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">
{% endblock %}

{% block body %}

	<div class="product-container">
		<!--HEADER-->
		<div class="product-header">
			<div class="search-container">
				<input type="text" id="productSearch" placeholder="Search products by name or description...">
				<i class="fas fa-search"></i>
			</div>

			<div class="addbutton-container">
				<button id="addProductBtn" class="btn btn-add" onclick="openAddModal()">
					<i class="fas fa-plus"></i>
					Add Product
				</button>
			</div>
		</div>

		<!--CONTENT:PRODUCTS-->
		<div class="product-grid">
			{% for p in products %}
				<div class="product-card" data-product-name="{{ p.nom }}" data-product-description="{{ p.description|default('') }}" data-product-id="{{ p.id }}">
					{% if p.promotionId %}
						<div class="discount-badge">{{p.getDiscountPercentage()}}% OFF</div>
					{% endif %}

					<div class="product-image">
						{% if p.image_url %}
							<img src="{{asset(p.image_url)}}" alt="{{p.nom}}">
						{% else %}
							<img src="{{asset('resources/assets/buy.png')}}" alt="Default product image">
						{% endif %}
					</div>

					<div class="product-body">
						<h5 class="product-title">{{p.nom}}</h5>
						<p class="product-description">{{p.description|default('No description available')}}</p>

						<div class="product-pricing">
							<div class="price-container">
								{% if p.promotionId %}
									<span class="original-price">{{ p.prix }}
										DT</span>
									<span class="discounted-price">{{ p.getDiscountedPrice() }}
										DT</span>
									<span class="discount-percentage">({{ p.getDiscountPercentage() }}% OFF)</span>
								{% else %}
									<span class="product-price">{{ p.prix }}
										DT</span>
								{% endif %}
							</div>
						</div>

						<div class="product-meta">
							<span class="product-stock">Stock:
								{{p.stock}}</span>
							<span class="product-likes">
								<i class="fas fa-heart"></i>
								{{p.likeCount|default(0)}}
							</span>
						</div>

						<div class="product-actions">
							<button class="btn btn-edit" onclick="openEditModal({{ p.id }})">
								<i class="fas fa-edit"></i>
								Edit
							</button>

							<form method="POST" action="{{ path('product_delete', {'id': p.id}) }}" class="delete-form" style="padding:0;margin:0">
								<input type="hidden" name="_token" value="{{ csrf_token('delete' ~ p.id) }}">
								<button type="submit" class="btn btn-remove" onclick="return confirm('Are you sure you want to delete this product? All related data will be removed.');">
									<i class="fas fa-trash"></i>
									Remove
								</button>
							</form>
						</div>
					</div>
				</div>
			{% else %}
				<div class="empty-state">
					<i class="fas fa-box-open"></i>
					<p>No products found for your shop.</p>
					<button class="btn btn-primary mt-3" onclick="openAddModal()">
						<i class="fas fa-plus"></i>
						Add Your First Product
					</button>
				</div>
			{% endfor %}
		</div>
	</div>

	<!-- MODALS -->
	<!-- Add Product Modal -->
	<div class="modal-background" id="addModal">
		<div class="modal-content">
			<div class="modal-header">
				<h3>Add New Product</h3>
				<button class="modal-close" onclick="closeAddModal()">&times;</button>
			</div>
			<div class="modal-body">
				{% if form is defined %}
					{{ form_start(form, {
                        'attr': {'id': 'addProductForm'},
                        'action': path('product_new'),
                        'method': 'POST'
                    }) }}
					{{ form_widget(form) }}
					{{ form_end(form) }}
				{% else %}
					<p>Form could not be loaded. Please refresh the page.</p>
				{% endif %}
			</div>
		</div>
	</div>

	<!-- Edit Product Modal -->
	<div class="modal-background" id="editModal">
		<div class="modal-content">
			<div class="modal-header">
				<h3>Edit Product</h3>
				<button class="modal-close" onclick="closeEditModal()">&times;</button>
			</div>
			<div class="modal-body">
				{% if editForm is defined %}
					{{ form_start(editForm, {
                        'attr': {
                            'id': 'editProductForm',
                            'action': '',
                            'method': 'POST',
                            'enctype': 'multipart/form-data'
                        }
                    }) }}
					{{ form_widget(editForm) }}
					<div class="form-actions">
						<button type="submit" class="btn btn-primary">Save Changes</button>
						<button type="button" class="btn btn-secondary" onclick="closeEditModal()">Cancel</button>
					</div>
					{{ form_end(editForm) }}
				{% else %}
					<p>Form could not be loaded. Please refresh the page.</p>
				{% endif %}
			</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>
		document.addEventListener('DOMContentLoaded', function () {
const searchInput = document.querySelector('.search-container input');

searchInput.addEventListener('input', function () {
const searchTerm = this.value.toLowerCase();
const products = document.querySelectorAll('.product-card');

products.forEach(product => {
const productName = product.dataset.productName.toLowerCase();
const productDescription = product.dataset.productDescription.toLowerCase();

if (productName.includes(searchTerm) || productDescription.includes(searchTerm)) {
product.style.display = '';
} else {
product.style.display = 'none';
}
});
});
});

// Add Product Modal functions
function openAddModal() {
document.getElementById('addModal').classList.add('active');
}

function closeAddModal() {
document.getElementById('addModal').classList.remove('active');
document.getElementById('addProductForm').reset();
}

function openEditModal(productId) {
const form = document.getElementById('editProductForm');
if (form) {
form.action = `/shopOwner/product/edit/${productId}`;

const productCard = document.querySelector (`.product-card[data-product-id="${productId}"]`);
if (productCard) {
form.querySelector('[name$="[nom]"]').value = productCard.dataset.productName;
form.querySelector('[name$="[description]"]').value = productCard.dataset.productDescription;

const priceElement = productCard.querySelector('.product-price, .discounted-price');
form.querySelector('[name$="[prix]"]').value = parseFloat(priceElement.textContent);

const stockText = productCard.querySelector('.product-stock').textContent;
form.querySelector('[name$="[stock]"]').value = parseInt(stockText.replace('Stock:', '').trim());

const imgSrc = productCard.querySelector('.product-image img').src;
const previewContainer = form.querySelector('.current-image');
if (previewContainer) {
const imgPreview = previewContainer.querySelector('img');
imgPreview.src = imgSrc;
previewContainer.style.display = imgSrc ? 'block' : 'none';
}
}
}
document.getElementById('editModal').classList.add('active');
}

function closeEditModal() {
document.getElementById('editModal').classList.remove('active');
}

function initFileUploadPreview() {
const fileInputs = document.querySelectorAll('input[type="file"]');
fileInputs.forEach(input => {
input.addEventListener('change', function () {
const preview = this.parentElement.querySelector('.file-upload-preview');
if (this.files && this.files[0]) {
const fileName = this.files[0].name;
preview.innerHTML = `<i class="fas fa-file-image"></i> <span>${fileName}</span>`;
preview.classList.add('has-file');
} else {
preview.innerHTML = `<i class="fas fa-cloud-upload-alt"></i> <span>Choose an image or drag it here</span>`;
preview.classList.remove('has-file');
}
});
});
}
	</script>
{% endblock %}
